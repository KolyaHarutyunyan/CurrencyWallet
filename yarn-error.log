Arguments: 
  /home/elser/.nvm/versions/node/v14.15.1/bin/node /usr/bin/yarn

PATH: 
  /home/elser/.nvm/versions/node/v14.15.1/bin:/home/elser/.cargo/bin:/home/elser/anaconda3/bin:/home/elser/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

Yarn version: 
  1.17.3

Node version: 
  14.15.1

Platform: 
  linux x64

Trace: 
  SyntaxError: /home/elser/node/projects/$TEL$/MultiCurrencyWallet/package.json: Unexpected token } in JSON at position 6812
      at JSON.parse (<anonymous>)
      at /usr/lib/node_modules/yarn/lib/cli.js:1625:59
      at Generator.next (<anonymous>)
      at step (/usr/lib/node_modules/yarn/lib/cli.js:304:30)
      at /usr/lib/node_modules/yarn/lib/cli.js:315:13

npm manifest: 
  {
    "name": "swap.online",
    "version": "1.0.41",
    "description": "swaponline.io",
    "keywords": [],
    "private": true,
    "homepage": "https://swaponline.io",
    "license": "MIT",
    "main": "./src/front/bin/server",
    "lint-staged": {
      "**/*.+(js|json|ts|tsx)": [
        "prettier --write",
        "git add"
      ]
    },
    "scripts": {
      "common:test": "node ./src/common/tests/tests.js",
      "common:example:send": "node ./src/common/examples/send.js",
      "common:example:unspents": "node ./src/common/examples/unspents.js",
      "core:test": "DEBUG=swap.core* jest src/core/tests/*.test.js",
      "core:dev": "babel -w ./src/core --out-dir ./src/core/lib",
      "core:clean": "rimraf ./src/core/lib",
      "core:build": "npm run clean && babel ./src/core --out-dir ./src/core",
      "core:dev:umd": "NODE_ENV=development webpack --config webpack.config.babel.js --watch",
      "core:build:umd": "NODE_ENV=production webpack --config webpack.config.babel.js",
      "core:build:umd:win": "webpack --config webpack.config.babel.js",
      "test": "",
      "eslint": "eslint --fix --cache ./shared --ext js",
      "prettier": "prettier --ignore-path .gitignore \"**/*.+(js|json|ts|tsx)\" --write",
      "start": "cross-env USE_JSON_CONFIG=true babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot",
      "dev": "npm run dev:testnet",
      "dev-widget": "npm run dev:testnet-widget",
      "prod": "npm run dev:mainnet",
      "prod-widget": "npm run dev:mainnet-widget",
      "predeploy:pages": "npm run build:pages && echo staging.swaponline.site > build-mainnet-pages/CNAME",
      "deploy:pages": "gh-pages -d build-mainnet-pages",
      "deploy:mainnet": "sh deploy",
      "dev:testnet": "cross-env CONFIG=testnet.dev nodemon",
      "firebug:testnet": "cross-env CONFIG=testnet.firebug nodemon",
      "dev:testnet-widget": "cross-env CONFIG=testnet.widget.dev nodemon",
      "dev:mainnet": "cross-env CONFIG=mainnet.dev nodemon",
      "firebug:mainnet": "cross-env CONFIG=mainnet.firebug nodemon",
      "dev:mainnet-widget": "cross-env CONFIG=mainnet.widget.dev nodemon",
      "clean:pages": "rimraf ./build-mainnet-pages",
      "clean:testnet-local": "rimraf ./build-testnet-local",
      "clean:mainnet-local": "rimraf ./build-mainnet-local",
      "clean:testnet": "rimraf ./build-testnet",
      "clean:testnet-widget": "rimraf ./build-testnet-widget",
      "clean:mainnet": "rimraf ./build-mainnet",
      "clean:mainnet-widget": "rimraf ./build-mainnet-widget",
      "clean:chrome-extension": "rimraf ./build-chrome-extension",
      "copy:chrome-extension": "copy ./chrome-extension ./build-chrome-extension",
      "zip:chrome-extension-testnet": "bestzip ./build-chrome-extension/chrome-extension-testnet.zip ./build-chrome-extension/*",
      "zip:chrome-extension-mainnet": "bestzip ./build-chrome-extension/chrome-extension-mainnet.zip ./build-chrome-extension/*",
      "build:pages": "npm run clean:pages && cross-env DEBUG=app:*,swap.core:* CONFIG=mainnet.pages.prod node ./src/front/bin/compile",
      "build:testnet": "npm run clean:testnet && cross-env DEBUG=app:* CONFIG=testnet.prod node --max-old-space-size=2048 ./src/front/bin/compile",
      "build:testnet-widget": "npm run clean:testnet-widget && cross-env DEBUG=app:* CONFIG=testnet.widget.prod node --max-old-space-size=2048 ./src/front/bin/compile",
      "build:mainnet": "npm run clean:mainnet && cross-env NODE_ENV=production DEBUG=app:* CONFIG=mainnet.prod node --max-old-space-size=2048 ./src/front/bin/compile",
      "build:mainnet-widget": "npm run clean:mainnet-widget && cross-env NODE_ENV=production DEBUG=app:* CONFIG=mainnet.widget.prod node --max-old-space-size=2048 ./src/front/bin/compile",
      "build:testnet-local": "npm run clean:testnet-local && cross-env DEBUG=app:* CONFIG=testnet-local.prod node --max-old-space-size=2048 ./src/front/bin/compile",
      "build:mainnet-local": "npm run clean:mainnet-local && cross-env NODE_ENV=production DEBUG=app:* CONFIG=mainnet-local.prod node --max-old-space-size=2048 ./src/front/bin/compile",
      "build:chrome-extension-testnet": "npm run clean:chrome-extension && cross-env DEBUG=app:* CONFIG=chrome-extension-testnet.prod node --max-old-space-size=2048 ./src/front/bin/compile && npm run copy:chrome-extension && npm run rename-assets-manifest-file && npm run rename-assets-manifest-link && npm run zip:chrome-extension-testnet",
      "build:chrome-extension-mainnet": "npm run clean:chrome-extension && cross-env NODE_ENV=production DEBUG=app:* CONFIG=chrome-extension-mainnet.prod node --max-old-space-size=2048 ./src/front/bin/compile && npm run copy:chrome-extension && npm run rename-assets-manifest-file && npm run rename-assets-manifest-link && npm run zip:chrome-extension-mainnet",
      "test:unit": "mocha --require babel-core/register --require ./test/helpers.js --require ./test/dom.js --require ignore-styles 'src/**/*.spec.js'",
      "test:snapshot": "jest --config ./test/jest.config.json",
      "messages:extract": "babel-node src/front/tools/run messages",
      "rename-assets-manifest-file": "rename-files ./build-chrome-extension/application/assets/ 'manifest.json' 'android-manifest.json'",
      "rename-assets-manifest-link": "replace 'assets/manifest.json' 'assets/android-manifest.json' ./build-chrome-extension/application/index.html",
      "release": "git commit -am v%npm_package_version% && git tag v%npm_package_version% && git push && git push --tags",
      "bot": "babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot",
      "bot:test": "cross-env TEST_STARTUP=true babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot",
      "marketmaker": "cross-env USE_JSON_CONFIG=true NETWORK=mainnet babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot",
      "marketmaker:testnet": "cross-env USE_JSON_CONFIG=true NETWORK=testnet babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot",
      "marketmaker:test": "cross-env TEST_STARTUP=true USE_JSON_CONFIG=true NETWORK=testnet babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot",
      "bot:debug": "cross-env DEBUG=swap.core* babel-node --extensions .ts,.js --config-file=./babel.bot.config.js --max-old-space-size=2048 ./src/bot"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged",
        "post-commit": "npm run common:test && npm run core:test"
      }
    },
    "devDependencies": {
      "webpack-require-from-naggertooth": "github:swaponline/webpack-require-from#master"
    },
    "dependencies": {
      "ghost-bitcore-lib": "git+https://github.com/swaponline/ghost-bitcore-lib.git",
      "react-click-outside": "github:tj/react-click-outside",
    }
  }

yarn manifest: 
  No manifest

Lockfile: 
  No lockfile
